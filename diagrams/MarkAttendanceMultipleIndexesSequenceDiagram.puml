@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":MarkAttendanceCommandParser" as MarkAttendanceCommandParser LOGIC_COLOR
participant "d:MarkAttendanceCommand" as MarkAttendanceCommand LOGIC_COLOR
participant "ParserUtil" as ParserUtil LOGIC_COLOR
participant ":AttendanceList" as AttendanceList LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "lastShownList:List<Person>" as lastShownList LOGIC_COLOR
participant "personsToEdit:List<Person>" as personsToEdit LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("att -i 1,3 -w 5")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("att -i 1,3 -w 5")
activate AddressBookParser

create MarkAttendanceCommandParser
AddressBookParser -> MarkAttendanceCommandParser
activate MarkAttendanceCommandParser

MarkAttendanceCommandParser --> AddressBookParser
deactivate MarkAttendanceCommandParser

AddressBookParser -> MarkAttendanceCommandParser : parse(" -i 1,3 -w 5")
activate MarkAttendanceCommandParser

create MarkAttendanceCommand
MarkAttendanceCommandParser -> MarkAttendanceCommand
activate MarkAttendanceCommand

MarkAttendanceCommand --> MarkAttendanceCommandParser :
deactivate MarkAttendanceCommand

MarkAttendanceCommandParser --> AddressBookParser : d
deactivate MarkAttendanceCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
MarkAttendanceCommandParser -[hidden]-> AddressBookParser
destroy MarkAttendanceCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> MarkAttendanceCommand : execute(m)
activate MarkAttendanceCommand

MarkAttendanceCommand -> Model : getFilteredPersonList()
activate Model

create lastShownList
Model -> lastShownList
activate lastShownList

lastShownList --> Model
deactivate lastShownList
Model --> MarkAttendanceCommand : lastShownList
deactivate Model

create personsToEdit
MarkAttendanceCommand -> personsToEdit : new ArrayList<>()
activate personsToEdit

personsToEdit --> MarkAttendanceCommand
deactivate personsToEdit

loop for each index in {1,3}
    MarkAttendanceCommand -> lastShownList : get(index)
    activate lastShownList

    lastShownList --> MarkAttendanceCommand : personToEdit
    deactivate lastShownList

    MarkAttendanceCommand -> personsToEdit : add(personToEdit)
    activate personsToEdit

    personsToEdit --> MarkAttendanceCommand
    deactivate
end loop

' Todo in v1.5: Fill up remaining

create CommandResult
MarkAttendanceCommand -> CommandResult
activate CommandResult

CommandResult --> MarkAttendanceCommand
deactivate CommandResult

MarkAttendanceCommand --> LogicManager : r
deactivate MarkAttendanceCommand

[<--LogicManager
deactivate LogicManager
@enduml
